<?php
/**
 * @file
 * Code for the WF Git Config feature.
 */

define('WF_GITOLITE_SERVER', 1);
define('WF_GITOLITE_REPOSITORY', 1);

include_once 'wf_git_config.features.inc';

/**
 * Implements hook_sshid_aliases().
 */
function wf_git_config_sshid_aliases() {
  $git_server = git_server_load(WF_GITOLITE_SERVER);

  return array(
    'git-@uid' => array(
      'User' => $git_server->user,
      'HostName' => $git_server->host,
    ),
  );
}


/**
 * Implements hook_gitolite_permissions().
 */
function wf_git_config_gitolite_permissions() {
  $job_branch_refex = wf_job_slug('.+') . '$';

  $env_branch_refexes = array();
  foreach(entity_load('wf_environment') as $env) {
    $env_branch_refexes[] = strtolower($env->env) . '$';
  }

  $rules = array();
  $rules[] = array(
    'permission' => 'RW+',
    'refexes' => array(),
    'entity' => '@root',
  );

  $rules[] = array(
    'permission' => 'RW',
    'refexes' => array($job_branch_refex),
    'entity' => '@editor',
  );

  if (count($env_branch_refexes) > 0) {
    $rules[] = array(
      'permission' => 'RW',
      'refexes' => $env_branch_refexes,
      'entity' => '@reviewer',
    );
  }

  $rules[] = array(
    'permission' => 'R',
    'refexes' => array(),
    'entity' => '@developer',
  );

  $git_server = git_server_load(WF_GITOLITE_SERVER);
  $git_repo = git_repository_load(WF_GITOLITE_REPOSITORY);

  $permissions = array(
    $git_server->host => array(
      $git_server->user => array($git_repo->name => $rules),
    ),
  );

  return $permissions;
}

